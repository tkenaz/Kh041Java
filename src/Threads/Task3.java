package Threads;
/*
* 3.	Написать программу, которая будет находить самую длинную повторяющуюся последовательность байт в файле.
    a.	Имя файла вводить с клавиатуры.
    b.	Файл можно считать в память целиком.
    c.	Поиск последовательности надо реализовать в отдельном потоке выполнения.

        i.	Поток должен запускаться при старте программы
        ii.	После указания имени файла главный поток должен оповестить дополнительный о том, что он может начать поиск.
        iii.	Дополнительный поток должен предоставлять информацию о ходе поиска, а главный – выводить эту информацию
            на экран. Например, можно печатать текущее значение длины последовательности.
        iv.	После завершения поиска главный поток должен вывести число байт в самой длинной повторяющейся последовательности
            и индексы первого и второго ее вхождения.
        v.	После завершения поиска вспомогательный поток должен перейти в состояние ожидания, а главный – запросить
            имя следующего файла.

*/
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Scanner;

public class Task3 {

    private byte[] content;

    private byte[] getContent() throws IOException {

        Scanner scan = new Scanner(System.in);
        System.out.println("Name of the source file: ");
        String fileName = scan.next();

        content = Files.readAllBytes(Paths.get(fileName));
        return content;
    }


}
